-- MySQL Script generated by MySQL Workbench
-- Mon Nov 25 17:44:00 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema tdt
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tdt
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tdt` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `tdt` ;
USE `tdt` ;

-- -----------------------------------------------------
-- procedure usp_DeleteCategory
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteCategory`(categoryId int)
BEGIN
DELETE FROM `tdt`.`categories`
WHERE `categories`.`Id` = categoryId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteDistrict
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteDistrict`(districtId int)
BEGIN
DELETE FROM `tdt`.`districts`
WHERE `districts`.`Id` = districtId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteFunder
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteFunder`(funderId int)
BEGIN
DELETE FROM `tdt`.`funders`
WHERE `funders`.`Id` = funderId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteNGO
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteNGO`(ngoId int)
BEGIN
DELETE FROM `tdt`.`ngos`
WHERE `ngos`.`Id` = ngoId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteOtherBody
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteOtherBody`(otherBodyId int)
BEGIN
DELETE FROM `tdt`.`otherbodies`
WHERE `otherbodies`.`Id` = otherBodyId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteProjectOfficer
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteProjectOfficer`(projectOfficerId int)
BEGIN
DELETE FROM `tdt`.`projectofficers`
WHERE `projectofficers`.`Id` = projectOfficerId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteRegion
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteRegion`(regionId int)
BEGIN
DELETE FROM `tdt`.`regions`
WHERE `regions`.`Id` = regionId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_DeleteStatusCode
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_DeleteStatusCode`(statusCodeId int)
BEGIN
DELETE FROM `tdt`.`projectstatuscodes`
WHERE `projectstatuscodes`.`Id` = statusCodeId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllCategories
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllCategories`()
BEGIN
SELECT `categories`.`Id`,
    `categories`.`CategoryName`,
    `categories`.`HighLevelCategory`
FROM `tdt`.`categories`;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllDistricts
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllDistricts`()
BEGIN
SELECT `districts`.`Id`,
    `districts`.`Name`
FROM `tdt`.`districts`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllFunders
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllFunders`()
BEGIN
SELECT `funders`.`Id`,
    `funders`.`Name`,
    `funders`.`Address1`,
    `funders`.`Address2`,
    `funders`.`Address3`,
    `funders`.`Town`,
    `funders`.`County`,
    `funders`.`PostCode`,
    `funders`.`Tel`,
    `funders`.`MainContact`,
    `funders`.`Amount`
FROM `tdt`.`funders`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllNGOs
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllNGOs`()
BEGIN
SELECT `ngos`.`Id`,
    `ngos`.`Name`
FROM `tdt`.`ngos`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllOtherBodies
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllOtherBodies`()
BEGIN
SELECT `otherbodies`.`Id`,
    `otherbodies`.`Name`
FROM `tdt`.`otherbodies`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllProjectOfficers
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllProjectOfficers`()
BEGIN
SELECT `projectofficers`.`Id`,
    `projectofficers`.`FirstName`,
    `projectofficers`.`LastName`,
    `projectofficers`.`Tel`,
    `projectofficers`.`Mobile`,
    `projectofficers`.`Email`,
    `projectofficers`.`Address1`,
    `projectofficers`.`Address2`,
    `projectofficers`.`Address3`,
    `projectofficers`.`Town`,
    `projectofficers`.`County`,
    `projectofficers`.`PostCode`,
    `projectofficers`.`Image`,
    `projectofficers`.`Info`
FROM `tdt`.`projectofficers`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllProjectStatusCodes
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllProjectStatusCodes`()
BEGIN
SELECT `projectstatuscodes`.`Id`,
    `projectstatuscodes`.`StatusCode`,
    `projectstatuscodes`.`Description`
FROM `tdt`.`projectstatuscodes`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllProjects
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllProjects`()
BEGIN

SELECT `projects`.`Id`,
    `projects`.`ProjectIdentifier`,
    `projects`.`ProjectName`,
    `projects`.`ApplicationDate`,
    `projects`.`AmountGrantRequested`,
    `projects`.`AmountGrantApproved`,
    `projects`.`DateGrantApproved`,
    `projects`.`AmountGrantPaid`,
    `projects`.`DateGrantPaid`,
    `projects`.`ProjectDescription`,
    `projects`.`StatusCode_Id`,
    `projects`.`StatusDescription`,
    `projects`.`ProjOfficerRecommendation`,
    `projects`.`TargetCompletionDate`,
    `projects`.`Region_Id`,
    `projects`.`District_Id`,
    `projects`.`Keywords`,
    `projects`.`Summary`,
    `projects`.`ProjOfficer_Id`,
    `projects`.`Problems`,
    `projects`.`StatusCodeDate`,
    `projects`.`StrengthsWeaknesses`,
    `projects`.`FinanceOtherFunders`,
    `projects`.`LocalContribution`,
    `projects`.`WebSitePicture`,
    `projects`.`WebSitePictureDescription`,
    `projects`.`Latitude`,
    `projects`.`Longitude`,
    `projects`.`DocumentsUrl`,
    `projects`.`PublicDocumentsUrl`,
    `projects`.`ImpactOfProject`,
    `projects`.`LastUpdated`,
    `projects`.`TotalProjectCost`,
    `projects`.`LastUpdatedBy`
FROM `tdt`.`projects`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetAllRegions
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetAllRegions`()
BEGIN
SELECT `regions`.`Id`,
    `regions`.`Name`
FROM `tdt`.`regions`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetCategory
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetCategory`(categoryId int)
BEGIN
SELECT `categories`.`Id`,
    `categories`.`CategoryName`,
    `categories`.`HighLevelCategory`
FROM `tdt`.`categories`
WHERE `categories`.`Id` = categoryId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetDistrict
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetDistrict`(districtId int)
BEGIN
SELECT `districts`.`Id`,
    `districts`.`Name`
FROM `tdt`.`districts`
WHERE `districts`.`Id` = districtId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetFunder
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetFunder`(funderId int)
BEGIN
SELECT `funders`.`Id`,
    `funders`.`Name`,
    `funders`.`Address1`,
    `funders`.`Address2`,
    `funders`.`Address3`,
    `funders`.`Town`,
    `funders`.`County`,
    `funders`.`PostCode`,
    `funders`.`Tel`,
    `funders`.`MainContact`,
    `funders`.`Amount`
FROM `tdt`.`funders`
WHERE `funders`.`Id` = funderId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetNGO
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetNGO`(ngoId int)
BEGIN
SELECT `ngos`.`Id`,
    `ngos`.`Name`
FROM `tdt`.`ngos`
WHERE `ngos`.`Id` = ngoId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetOtherBody
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetOtherBody`(otherBodyId int)
BEGIN
SELECT `otherbodies`.`Id`,
    `otherbodies`.`Name`
FROM `tdt`.`otherbodies`
WHERE `otherbodies`.`Id` = otherBodyId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetProject
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetProject`(inId int)
BEGIN

SELECT `projects`.`Id`,
    `projects`.`ProjectIdentifier`,
    `projects`.`ProjectName`,
    `projects`.`ApplicationDate`,
    `projects`.`AmountGrantRequested`,
    `projects`.`AmountGrantApproved`,
    `projects`.`DateGrantApproved`,
    `projects`.`AmountGrantPaid`,
    `projects`.`DateGrantPaid`,
    `projects`.`ProjectDescription`,
    `projects`.`StatusCode_Id`,
    `projects`.`StatusDescription`,
    `projects`.`ProjOfficerRecommendation`,
    `projects`.`TargetCompletionDate`,
    `projects`.`Region_Id`,
    `projects`.`District_Id`,
    `projects`.`Keywords`,
    `projects`.`Summary`,
    `projects`.`ProjOfficer_Id`,
    `projects`.`Problems`,
    `projects`.`StatusCodeDate`,
    `projects`.`StrengthsWeaknesses`,
    `projects`.`FinanceOtherFunders`,
    `projects`.`LocalContribution`,
    `projects`.`WebSitePicture`,
    `projects`.`WebSitePictureDescription`,
    `projects`.`Latitude`,
    `projects`.`Longitude`,
    `projects`.`DocumentsUrl`,
    `projects`.`PublicDocumentsUrl`,
    `projects`.`ImpactOfProject`,
    `projects`.`LastUpdated`,
    `projects`.`TotalProjectCost`,
    `projects`.`LastUpdatedBy`
FROM `tdt`.`projects`
WHERE `projects`.`Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetProjectOfficer
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetProjectOfficer`(projectOfficerId int)
BEGIN
SELECT `projectofficers`.`Id`,
    `projectofficers`.`FirstName`,
    `projectofficers`.`LastName`,
    `projectofficers`.`Tel`,
    `projectofficers`.`Mobile`,
    `projectofficers`.`Email`,
    `projectofficers`.`Address1`,
    `projectofficers`.`Address2`,
    `projectofficers`.`Address3`,
    `projectofficers`.`Town`,
    `projectofficers`.`County`,
    `projectofficers`.`PostCode`,
    `projectofficers`.`Image`,
    `projectofficers`.`Info`
FROM `tdt`.`projectofficers`
WHERE `projectofficers`.`Id` = projectOfficerId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetRegion
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetRegion`(regionId int)
BEGIN
SELECT `regions`.`Id`,
    `regions`.`Name`
FROM `tdt`.`regions`
WHERE `regions`.`Id` = regionId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_GetStatusCode
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_GetStatusCode`(statusCodeId int)
BEGIN
SELECT `projectstatuscodes`.`Id`,
    `projectstatuscodes`.`StatusCode`,
    `projectstatuscodes`.`Description`
FROM `tdt`.`projectstatuscodes`
WHERE `projectstatuscodes`.`Id` = statusCodeId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertCategory
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertCategory`(inName varchar(100), inHighLevel int)
BEGIN
INSERT INTO `tdt`.`categories`
(`CategoryName`,
`HighLevelCategory`)
VALUES
(inName, inHighLevel);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertDistrict
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertDistrict`(inName longtext)
BEGIN
INSERT INTO `tdt`.`districts`
(`Name`)
VALUES
(inName);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertFunder
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertFunder`(inName longtext, 
															   inAddress1 longtext,
															   inAddress2 longtext,
															   inAddress3 longtext,
															   inTown longtext,
															   inCounty longtext,
															   inPostCode longtext,
															   inTel longtext,
															   inMainContact longtext,
															   inAmount decimal)
BEGIN
	INSERT INTO `tdt`.`funders`
	(`Name`,
	`Address1`,
	`Address2`,
	`Address3`,
	`Town`,
	`County`,
	`PostCode`,
	`Tel`,
	`MainContact`,
	`Amount`)
	VALUES
	(inName, 
	inAddress1 ,
	inAddress2,
	inAddress3,
	inTown,
	inCounty,
	inPostCode,
	inTel,
	inMainContact,
	inAmount);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertNGO
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertNGO`(inName longtext)
BEGIN
	INSERT INTO `tdt`.`ngos`
	(`Name`)
	VALUES
	(inName);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertOtherBody
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertOtherBody`(inName longtext)
BEGIN
	INSERT INTO `tdt`.`otherbodies`
	(`Name`)
	VALUES
	(inName);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertProject
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertProject`(inProjectIdentifier longtext,
                                                                inProjectName longtext,
                                                                inApplicationDate datetime,
                                                                inAmountGrantRequested bigint,
                                                                inAmountGrantApproved bigint,
                                                                inDateGrantApproved datetime,
                                                                inAmountGrantPaid bigint,
                                                                inDateGrantPaid datetime,
                                                                inProjectDescription longtext,
                                                                inStatusCode_Id int,
                                                                inStatusDescription longtext,
                                                                inProjOfficerRecommendation longtext,
                                                                inTargetCompletionDate datetime,
                                                                inRegion_Id int,
                                                                inDistrict_Id int,
                                                                inKeywords longtext,
                                                                inSummary longtext,
                                                                inProjOfficer_Id int,
                                                                inProblems longtext,
                                                                inStatusCodeDate date,
                                                                inStrengthsWeaknesses longtext,
                                                                inFinanceOtherFunders longtext,
                                                                inLocalContribution longtext,
                                                                inWebSitePicture longblob,
                                                                inWebSitePictureDescription longtext,
                                                                inLatitude decimal(18,12),
                                                                inLongitude decimal(18,12),
                                                                inDocumentsUrl longtext,
																inPublicDocumentsUrl longtext,
                                                                inImpactOfProject longtext,
                                                                inTotalProjectCost decimal(19,4),
                                                                inLastUpdatedBy varchar(50))
BEGIN

	INSERT INTO `tdt`.`projects`
	(`Id`,
	`ProjectIdentifier`,
	`ProjectName`,
	`ApplicationDate`,
	`AmountGrantRequested`,
	`AmountGrantApproved`,
	`DateGrantApproved`,
	`AmountGrantPaid`,
	`DateGrantPaid`,
	`ProjectDescription`,
	`StatusCode_Id`,
	`StatusDescription`,
	`ProjOfficerRecommendation`,
	`TargetCompletionDate`,
	`Region_Id`,
	`District_Id`,
	`Keywords`,
	`Summary`,
	`ProjOfficer_Id`,
	`Problems`,
	`StatusCodeDate`,
	`StrengthsWeaknesses`,
	`FinanceOtherFunders`,
	`LocalContribution`,
	`WebSitePicture`,
	`WebSitePictureDescription`,
	`Latitude`,
	`Longitude`,
	`DocumentsUrl`,
	`PublicDocumentsUrl`,
	`ImpactOfProject`,
	`TotalProjectCost`,
	`LastUpdatedBy`)
	VALUES
	(inProjectIdentifier,
	inProjectName,
	inApplicationDate,
	inAmountGrantRequested,
	inAmountGrantApproved,
	inDateGrantApproved,
	inAmountGrantPaid,
	inDateGrantPaid,
	inProjectDescription,
	inStatusCode_Id,
	inStatusDescription,
	inProjOfficerRecommendation,
	inTargetCompletionDate,
	inRegion_Id,
	inDistrict_Id,
	inKeywords,
	inSummary,
	inProjOfficer_Id,
	inProblems,
	inStatusCodeDate,
	inStrengthsWeaknesses,
	inFinanceOtherFunders,
	inLocalContribution,
	inWebSitePicture,
	inWebSitePictureDescription,
	inLatitude,
	inLongitude,
	inDocumentsUrl,
	inPublicDocumentsUrl,
	inImpactOfProject,
	inTotalProjectCost,
	inLastUpdatedBy);



END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertProjectOfficer
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertProjectOfficer`(inFirstName longtext, 
															   inLastName longtext, 
                                                               inTel longtext, 
                                                               inMobile longtext, 
                                                               inEmail longtext, 
															   inAddress1 longtext,
															   inAddress2 longtext,
															   inAddress3 longtext,
															   inTown longtext,
															   inCounty longtext,
															   inPostCode longtext,
                                                               inImage longblob,
                                                               inInfo longtext)
BEGIN
	INSERT INTO `tdt`.`projectofficers`
	(`Id`,
	`FirstName`,
	`LastName`,
	`Tel`,
	`Mobile`,
	`Email`,
	`Address1`,
	`Address2`,
	`Address3`,
	`Town`,
	`County`,
	`PostCode`,
	`Image`,
	`Info`)
	VALUES
	(inFirstName,
	inLastName,
	inTel,
	inMobile,
	inEmail,
	inAddress1,
	inAddress2,
	inAddress3,
	inTown,
	inCounty,
	inPostCode,
	inImage,
	inInfo);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertPurchasedItem
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertPurchasedItem`(inProjectId int,
                                                                inPurchasedItem longtext,
																inDatePurchased datetime,
																inItemCost decimal)
BEGIN

	INSERT INTO `tdt`.`purchaseditems`
		(`Project_Id`,
		`PurchasedItem`,
		`DatePurchased`,
		`ItemCost`)
		VALUES
		(inProject_Id,
		inPurchasedItem,
		inDatePurchased,
		inItemCost);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertRegion
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertRegion`(inName longtext)
BEGIN
INSERT INTO `tdt`.`regions`
(`Name`)
VALUES
(inName);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_InsertStatusCode
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_InsertStatusCode`(inCode longtext, inDescription longtext)
BEGIN
	INSERT INTO `tdt`.`projectstatuscodes`
	(`StatusCode`, `Description`)
	VALUES
	(inCode, inDescription);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateCategory
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateCategory`(inId int, inName varchar(100), inHighLevel int)
BEGIN
UPDATE `tdt`.`categories`
SET
`CategoryName` = inName,
`HighLevelCategory` = inHighLevel
WHERE `Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateDistrict
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateDistrict`(inId int, inName longtext)
BEGIN
	UPDATE `tdt`.`districts`
	SET
	`Name` = inName
	WHERE `Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateFunder
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateFunder`(inId int, 
															   inName longtext,
															   inAddress1 longtext,
															   inAddress2 longtext,
															   inAddress3 longtext,
															   inTown longtext,
															   inCounty longtext,
															   inPostCode longtext,
															   inTel longtext,
															   inMainContact longtext,
															   inAmount decimal)
BEGIN
	UPDATE `tdt`.`funders`
	SET
	`Name` = inName,
	`Address1` = inAddress1,
	`Address2` = inAddress2,
	`Address3` = inAddress3,
	`Town` = inTown,
	`County` = inCounty,
	`PostCode` = inPostCode,
	`Tel` = inTel,
	`MainContact` = inMainContact,
	`Amount` = inAmount
	WHERE `Id` = inId;


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateNGO
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateNGO`(inId int, inName longtext)
BEGIN
	UPDATE `tdt`.`ngos`
	SET
	`Name` = inName
	WHERE `Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateOtherBody
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateOtherBody`(inId int, inName longtext)
BEGIN
	UPDATE `tdt`.`otherbodies`
	SET
	`Name` = inName
	WHERE `Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateProject
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateProject`(inId int,
                                                                inProjectIdentifier longtext,
                                                                inProjectName longtext,
                                                                inApplicationDate datetime,
                                                                inAmountGrantRequested bigint,
                                                                inAmountGrantApproved bigint,
                                                                inDateGrantApproved datetime,
                                                                inAmountGrantPaid bigint,
                                                                inDateGrantPaid datetime,
                                                                inProjectDescription longtext,
                                                                inStatusCode_Id int,
                                                                inStatusDescription longtext,
                                                                inProjOfficerRecommendation longtext,
                                                                inTargetCompletionDate datetime,
                                                                inRegion_Id int,
                                                                inDistrict_Id int,
                                                                inKeywords longtext,
                                                                inSummary longtext,
                                                                inProjOfficer_Id int,
                                                                inProblems longtext,
                                                                inStatusCodeDate date,
                                                                inStrengthsWeaknesses longtext,
                                                                inFinanceOtherFunders longtext,
                                                                inLocalContribution longtext,
                                                                inWebSitePicture longblob,
                                                                inWebSitePictureDescription longtext,
                                                                inLatitude decimal(18,12),
                                                                inLongitude decimal(18,12),
                                                                inDocumentsUrl longtext,
																inPublicDocumentsUrl longtext,
                                                                inImpactOfProject longtext,
                                                                inTotalProjectCost decimal(19,4),
                                                                inLastUpdatedBy varchar(50))
BEGIN

	UPDATE `tdt`.`projects`
	SET
	`ProjectIdentifier` =inProjectIdentifier,
	`ProjectName` =inProjectName,
	`ApplicationDate` =inApplicationDate,
	`AmountGrantRequested` =inAmountGrantRequested,
	`AmountGrantApproved` =inAmountGrantApproved,
	`DateGrantApproved` =inDateGrantApproved,
	`AmountGrantPaid` =inAmountGrantPaid,
	`DateGrantPaid` =inDateGrantPaid,
	`ProjectDescription` =inProjectDescription,
	`StatusCode_Id` =inStatusCode_Id,
	`StatusDescription` =inStatusDescription,
	`ProjOfficerRecommendation` =inProjOfficerRecommendation,
	`TargetCompletionDate` =inTargetCompletionDate,
	`Region_Id` =inRegion_Id,
	`District_Id` =inDistrict_Id,
	`Keywords` =inKeywords,
	`Summary` =inSummary,
	`ProjOfficer_Id` =inProjOfficer_Id,
	`Problems` =inProblems,
	`StatusCodeDate` =inStatusCodeDate,
	`StrengthsWeaknesses` =inStrengthsWeaknesses,
	`FinanceOtherFunders` =inFinanceOtherFunders,
	`LocalContribution` =inLocalContribution,
	`WebSitePicture` =inWebSitePicture,
	`WebSitePictureDescription` =inWebSitePictureDescription,
	`Latitude` =inLatitude,
	`Longitude` =inLongitude,
	`DocumentsUrl` =inDocumentsUrl,
	`PublicDocumentsUrl` =inPublicDocumentsUrl,
	`ImpactOfProject` =inImpactOfProject,
	`LastUpdated` = NOW(),
	`TotalProjectCost` =inTotalProjectCost,
	`LastUpdatedBy` =inLastUpdatedBy
	WHERE `Id` =inId;


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateProjectOfficer
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateProjectOfficer`(inId int, 
															   inFirstName longtext,
                                                               inLastName longtext,
															   inTel longtext,
                                                               inMobile longtext,
															   inAddress1 longtext,
															   inAddress2 longtext,
															   inAddress3 longtext,
															   inTown longtext,
															   inCounty longtext,
															   inPostCode longtext,
															   inMainContact longtext,
															   inImage longblob,
                                                               inInfo longtext)
BEGIN
	UPDATE `tdt`.`projectofficers`
		SET
		`FirstName` = inFirstName,
		`LastName` = inLastName,
		`Tel` = inTel,
		`Mobile` = inMobile,
		`Email` = inEmail,
		`Address1` = inAddress1,
		`Address2` = inAddress2,
		`Address3` = inAddress3,
		`Town` = inTown,
		`County` = inCounty,
		`PostCode` = inPostCode,
		`Image` = inImage,
		`Info` = inInfo
		WHERE `Id` = inId;



END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateRegion
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateRegion`(inId int, inName longtext)
BEGIN
	UPDATE `tdt`.`regions`
	SET
	`Name` = inName
	WHERE `Id` = inId;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure usp_UpdateStatusCodes
-- -----------------------------------------------------

DELIMITER $$
USE `tdt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `usp_UpdateStatusCodes`(inId int, inCode longtext, inDescription longtext)
BEGIN
	UPDATE `tdt`.`projectstatuscodes`
	SET
	`StatusCode` = inCode,
    `Description` = inDescription
	WHERE `Id` = inId;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
